/****************************************************************************

    ePMC - an extensible probabilistic model checker
    Copyright (C) 2017

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

*****************************************************************************/

/* Generated By:JavaCC: Do not edit this line. SpotParserConstants.java */
package epmc.automaton;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SpotParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMA = 5;
  /** RegularExpression Id. */
  int COLON = 6;
  /** RegularExpression Id. */
  int EQUALS = 7;
  /** RegularExpression Id. */
  int NOT = 8;
  /** RegularExpression Id. */
  int AND = 9;
  /** RegularExpression Id. */
  int OR = 10;
  /** RegularExpression Id. */
  int LPARENTH = 11;
  /** RegularExpression Id. */
  int RPARENTH = 12;
  /** RegularExpression Id. */
  int LBRACK = 13;
  /** RegularExpression Id. */
  int RBRACK = 14;
  /** RegularExpression Id. */
  int LCURLY = 15;
  /** RegularExpression Id. */
  int RCURLY = 16;
  /** RegularExpression Id. */
  int QUOTE = 17;
  /** RegularExpression Id. */
  int ACC = 18;
  /** RegularExpression Id. */
  int HOA = 19;
  /** RegularExpression Id. */
  int V1 = 20;
  /** RegularExpression Id. */
  int NAME = 21;
  /** RegularExpression Id. */
  int STATES = 22;
  /** RegularExpression Id. */
  int START = 23;
  /** RegularExpression Id. */
  int AP = 24;
  /** RegularExpression Id. */
  int ACC_NAME = 25;
  /** RegularExpression Id. */
  int GENERALIZED_BUCHI = 26;
  /** RegularExpression Id. */
  int BUCHI = 27;
  /** RegularExpression Id. */
  int ALL = 28;
  /** RegularExpression Id. */
  int ACCEPTANCE = 29;
  /** RegularExpression Id. */
  int INF = 30;
  /** RegularExpression Id. */
  int PROPERTIES = 31;
  /** RegularExpression Id. */
  int TRANS_LABELS = 32;
  /** RegularExpression Id. */
  int EXPLICIT_LABELS = 33;
  /** RegularExpression Id. */
  int TRANS_ACC = 34;
  /** RegularExpression Id. */
  int STATE_ACC = 35;
  /** RegularExpression Id. */
  int STUTTER_INVARIANT = 36;
  /** RegularExpression Id. */
  int DETERMINISTIC = 37;
  /** RegularExpression Id. */
  int INHERENTLY_WEAK = 38;
  /** RegularExpression Id. */
  int COMPLETE = 39;
  /** RegularExpression Id. */
  int TERMINAL = 40;
  /** RegularExpression Id. */
  int BODY = 41;
  /** RegularExpression Id. */
  int END = 42;
  /** RegularExpression Id. */
  int STATE = 43;
  /** RegularExpression Id. */
  int T = 44;
  /** RegularExpression Id. */
  int NUM_INT = 45;
  /** RegularExpression Id. */
  int IDENTIFIER = 46;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\",\"",
    "\":\"",
    "\"=\"",
    "\"!\"",
    "\"&\"",
    "\"|\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"\\\"\"",
    "\"acc\"",
    "\"HOA\"",
    "\"v1\"",
    "\"name\"",
    "\"States\"",
    "\"Start\"",
    "\"AP\"",
    "\"acc-name\"",
    "\"generalized-Buchi\"",
    "\"Buchi\"",
    "\"all\"",
    "\"Acceptance\"",
    "\"Inf\"",
    "\"properties\"",
    "\"trans-labels\"",
    "\"explicit-labels\"",
    "\"trans-acc\"",
    "\"state-acc\"",
    "\"stutter-invariant\"",
    "\"deterministic\"",
    "\"inherently-weak\"",
    "\"complete\"",
    "\"terminal\"",
    "\"--BODY--\"",
    "\"--END--\"",
    "\"State\"",
    "\"t\"",
    "<NUM_INT>",
    "<IDENTIFIER>",
  };

}
