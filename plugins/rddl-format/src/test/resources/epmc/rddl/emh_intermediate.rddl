// Test model by Ernst Moritz Hahn
// Checkes whether intermediate fluents work as expected
// s1 and s2 must have the same value
domain emh_intermediate {  	
	requirements = { reward-deterministic, intermediate-nodes };
      	
	pvariables { 
		s1 : { state-fluent,  bool, default = false };
		s2 : { state-fluent,  bool, default = false };
		i : { interm-fluent,  bool, level = 1 };
	};
  
	cpfs {
		i' = Bernoulli(0.5);
		s1' = i;
		s2' = i;
	};    
	reward = 1;
}
        
instance inst_emh_intermediate {

	domain = emh_intermediate;	
	init-state { 
	  s1; s2;
	};
  
	max-nondef-actions = 1;
	horizon  = 20;
	discount = 0.9;
}
