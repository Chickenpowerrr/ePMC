domain emh_quantifier_forall {
	requirements = { reward-deterministic };

	types {
		pos : object;
	};

	pvariables {
		N(pos) : { non-fluent,  bool, default = false };
		s(pos,pos) : { state-fluent,  bool, default = false };
	};

	cpfs {
		s'(?x,?y) = forall_{?z : pos} [s(?x,?y) == N(?z)] ;
	};
	reward = 1;
}

non-fluents emh_quantifier_forall_nonfluents {
	domain = emh_quantifier_forall;

	objects {
		pos : {p1,p2};
	};
	
	non-fluents {
			N(p1) = true;
			N(p2) = true;
	};
}

instance emh_quantifier_forall_instance {
	domain = emh_quantifier_forall;

	non-fluents = emh_quantifier_forall_nonfluents;
	init-state {
		s(p1,p2) = true;
	};
	max-nondef-actions = 1;
	horizon  = 20;
	discount = 0.9;
}
