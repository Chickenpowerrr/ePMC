<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>epmc.unambiguous</groupId>
  <artifactId>epmc-unambiguous</artifactId>
  <version>0</version>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <build>
    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-surefire-plugin</artifactId>
	<version>2.12.4</version>
	<configuration>
	  <skipTests>true</skipTests>
	</configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.9.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <version>2.6</version>
        <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
	    <archive>
	      <manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
            </archive>
          </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.wvengen</groupId>
        <artifactId>proguard-maven-plugin</artifactId>
        <version>2.0.8</version>
        <executions>
          <execution>
            <id>proguard</id>
            <phase>package</phase>
            <goals>
              <goal>proguard</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
        <keepclassmembers extends="java.lang.Enum">
                <method name="getEnumConstants"/>
            </keepclassmembers>
        <proguardVersion>5.2</proguardVersion> 
          <injar>${project.build.finalName}.jar</injar>
          <outjar>${project.build.finalName}-distribution.jar</outjar>
          <options>
	    <option>-dontwarn javax.jms.**</option>
	    <option>-dontwarn javax.mail.**</option>
	    <option>-dontwarn junit.**</option>
	    <option>-dontwarn com.sun.jdmk.comm.**</option>
	    <!-- TODO do this in a more fine-grained way... -->
	    <option>-dontwarn **</option>
	    <option>-dontshrink</option>
            <option>-dontobfuscate</option>
	    <option>-dontoptimize</option>
	    <option>-dontpreverify</option>
            <option>-keepattributes Exceptions</option>
            <option>-keep,allowobfuscation class * implements epmc.modelchecker.Model {
            }</option>
            <option>-keep,allowobfuscation class * implements epmc.plugin.** {
            }</option>
            <option>-keep,allowobfuscation class * implements epmc.value.Operator {
            }</option>
            <option>-keepclassmembers class * implements java.io.Serializable {
            static final long serialVersionUID;
            &lt;fields&gt;;
            private void writeObject(java.io.ObjectOutputStream);
            private void readObject(java.io.ObjectInputStream);
            java.lang.Object writeReplace();
            java.lang.Object readResolve();
            }</option>
            <option>-keep interface *</option>
	    <option>-dontshrink</option>
	    <option>-dontoptimize</option>
	    <option>-dontpreverify</option>
            <option>-optimizationpasses 3</option>
          </options>
          <libs>
            <lib>${java.home}/lib/rt.jar</lib>
            <lib>${java.home}/lib/jsse.jar</lib>
          </libs>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sf.proguard</groupId>
            <artifactId>proguard-base</artifactId>
            <version>5.2</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>                 
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
    <groupId>epmc</groupId>
    <artifactId>epmc</artifactId>
    <version>0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../../main/target/epmc-0-distribution.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>epmc.graphsolver</groupId>
      <artifactId>epmc-graphsolver</artifactId>
      <version>0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../graphsolver/target/epmc-graphsolver-0.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>epmc.imdp</groupId>
      <artifactId>epmc-imdp</artifactId>
      <version>0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../imdp/target/epmc-imdp-0.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>epmc.automata</groupId>
      <artifactId>epmc-automata</artifactId>
      <version>0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../automata/target/epmc-automata-0.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>epmc.prism</groupId>
      <artifactId>epmc-prism-format</artifactId>
      <version>0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../prism-format/target/epmc-prism-format-0.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>epmc.constraintsolver</groupId>
      <artifactId>epmc-constraintsolver</artifactId>
      <version>0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../constraintsolver/target/epmc-constraintsolver-0.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>epmc.param</groupId>
      <artifactId>epmc-param</artifactId>
      <version>0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/../param/target/epmc-param-0.jar</systemPath>
    </dependency>
  </dependencies>
</project>
